{"name":"Validate","tagline":"An easy way to validate forms with JavaScript writing HTML data attributes.","body":"# Validate.js - The fast way\r\n\r\nThis is an example of an easy way to validate forms with JavaScript writing HTML data attributes. This code use [RequireJS](http://requirejs.org), [jQuery validate library](http://jqueryvalidation.org/), [MaskedInput plugin](http://digitalbush.com/projects/masked-input-plugin/) and the [MaskMoney plugin](https://github.com/plentz/jquery-maskmoney). It also has a placeholder fallback for Internet Explorer.\r\n\r\nThis code works as a RequireJS module as seen in [usage](#usage).\r\n\r\n## Requirements\r\nThese are the basic requirements for your application:\r\n* ```Git```\r\n* ```bower v1.3+```\r\n* ```node v0.10+```\r\n\r\nNote: The JS dependencies, like RequireJS and jQuery, will be installed with bower.\r\n\r\n## Install && Run\r\n0. Clone the source from github: \r\n\r\n        git clone https://github.com/marcelonaegeler/validate.git\r\n        \r\n0. Go to `validate`:\r\n\r\n\t\tcd validate\r\n\t\t\r\n0. Download dependencies by bower:\r\n\r\n\t\tbower install\r\n\t\t\r\n0. Install the node http-server:\r\n\r\n\t\tnpm i http-server -g\r\n\t\t\r\n0. Start node server:\r\n\r\n\t\thttp-server\r\n\r\n0. Open the browser and go to localhost:\r\n\r\n\t\t127.0.0.1:8080\r\n\r\n## Usage\r\n0. If you use RequireJS for modular applications, you can set an attribute in body and get it int the `main.js` file:\r\n\t\t\r\n\t\t<body data-require=\"validate\">\r\n\r\n0. Include the RequireJS file in the end of the HTML file, calling the `main.js`:\r\n\t\t\r\n\t\t<script data-main=\"javascripts/main.js\" src=\"vendor/requirejs/require.js\"></script>\r\n\r\n0. Add the datasets (`data-*`) and required attribute in your HTML fields ([Available attributes and datasets](#available-attributes-and-datasets)):\r\n\t\t\r\n\t\t<input type=\"text\" name=\"email\" id=\"email\" required data-email=\"true\" >\r\n\r\n## Available attributes and datasets\r\nThe following attributes and datasets can be used in your code:\r\n\r\n0. Attributes:\r\n\r\n\t\trequired: [Optional] Set the field as required.\r\n\r\n\r\n0. Datasets (Set in the `form` tag):\r\n\r\n\t\tdata-validate=\"true\": [Required] Turn the validation on (true) or off (false or don't set it) in this form;\r\n\r\n\t\tdata-submit=\"function\": [Optional] Submit handler, when the form is sucessfully validated, this function is called (can be used to send your form via AJAX);\r\n\r\n\r\n0. Datasets (These are all optional. Set in the tags inside the form, like `input`, `select`...):\r\n\r\n\t\tdata-email=\"true\": Validate email;\r\n\r\n\t\tdata-cpf=\"true\": Validate CPF;\r\n\r\n\t\tdata-cnpj=\"true\": Validate CNPJ;\r\n\r\n\t\tdata-remote=\"object\": Do a request (AJAX) with the info in the \"object\" to validate in a external file;\r\n\r\n\t\tdata-equal-to=\"#element\": Make this field equal to the one passed in \"#id\";\r\n\r\n\t\tdata-money=\"true\": Set a money mask in this input;\r\n\r\n\t\tdata-mask=\"mask\": Set a mask in this input. Ex.: \"mask\" can be \"phone\" for phone masks, \"99/99/9999\" for dates. See [Masked input](http://digitalbush.com/projects/masked-input-plugin/).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}